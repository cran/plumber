% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plumber-static.R
\name{PlumberStatic}
\alias{PlumberStatic}
\title{Static file router}
\description{
Static file router

Static file router
}
\details{
Creates a router that is backed by a directory of files on disk.
}
\section{Super classes}{
\code{\link[plumber:Hookable]{plumber::Hookable}} -> \code{\link[plumber:Plumber]{plumber::Plumber}} -> \code{PlumberStatic}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PlumberStatic$new()}}
\item \href{#method-print}{\code{PlumberStatic$print()}}
\item \href{#method-clone}{\code{PlumberStatic$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Hookable" data-id="registerHooks">}\href{../../plumber/html/Hookable.html#method-registerHooks}{\code{plumber::Hookable$registerHooks()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="addAssets">}\href{../../plumber/html/Plumber.html#method-addAssets}{\code{plumber::Plumber$addAssets()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="addEndpoint">}\href{../../plumber/html/Plumber.html#method-addEndpoint}{\code{plumber::Plumber$addEndpoint()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="addFilter">}\href{../../plumber/html/Plumber.html#method-addFilter}{\code{plumber::Plumber$addFilter()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="addGlobalProcessor">}\href{../../plumber/html/Plumber.html#method-addGlobalProcessor}{\code{plumber::Plumber$addGlobalProcessor()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="call">}\href{../../plumber/html/Plumber.html#method-call}{\code{plumber::Plumber$call()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="filter">}\href{../../plumber/html/Plumber.html#method-filter}{\code{plumber::Plumber$filter()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="getApiSpec">}\href{../../plumber/html/Plumber.html#method-getApiSpec}{\code{plumber::Plumber$getApiSpec()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="getDebug">}\href{../../plumber/html/Plumber.html#method-getDebug}{\code{plumber::Plumber$getDebug()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="handle">}\href{../../plumber/html/Plumber.html#method-handle}{\code{plumber::Plumber$handle()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="mount">}\href{../../plumber/html/Plumber.html#method-mount}{\code{plumber::Plumber$mount()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="onHeaders">}\href{../../plumber/html/Plumber.html#method-onHeaders}{\code{plumber::Plumber$onHeaders()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="onWSOpen">}\href{../../plumber/html/Plumber.html#method-onWSOpen}{\code{plumber::Plumber$onWSOpen()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="openAPIFile">}\href{../../plumber/html/Plumber.html#method-openAPIFile}{\code{plumber::Plumber$openAPIFile()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="registerHook">}\href{../../plumber/html/Plumber.html#method-registerHook}{\code{plumber::Plumber$registerHook()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="removeHandle">}\href{../../plumber/html/Plumber.html#method-removeHandle}{\code{plumber::Plumber$removeHandle()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="route">}\href{../../plumber/html/Plumber.html#method-route}{\code{plumber::Plumber$route()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="run">}\href{../../plumber/html/Plumber.html#method-run}{\code{plumber::Plumber$run()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="serve">}\href{../../plumber/html/Plumber.html#method-serve}{\code{plumber::Plumber$serve()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="set404Handler">}\href{../../plumber/html/Plumber.html#method-set404Handler}{\code{plumber::Plumber$set404Handler()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="setApiSpec">}\href{../../plumber/html/Plumber.html#method-setApiSpec}{\code{plumber::Plumber$setApiSpec()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="setDebug">}\href{../../plumber/html/Plumber.html#method-setDebug}{\code{plumber::Plumber$setDebug()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="setDocs">}\href{../../plumber/html/Plumber.html#method-setDocs}{\code{plumber::Plumber$setDocs()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="setDocsCallback">}\href{../../plumber/html/Plumber.html#method-setDocsCallback}{\code{plumber::Plumber$setDocsCallback()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="setErrorHandler">}\href{../../plumber/html/Plumber.html#method-setErrorHandler}{\code{plumber::Plumber$setErrorHandler()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="setParsers">}\href{../../plumber/html/Plumber.html#method-setParsers}{\code{plumber::Plumber$setParsers()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="setSerializer">}\href{../../plumber/html/Plumber.html#method-setSerializer}{\code{plumber::Plumber$setSerializer()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="swaggerFile">}\href{../../plumber/html/Plumber.html#method-swaggerFile}{\code{plumber::Plumber$swaggerFile()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="Plumber" data-id="unmount">}\href{../../plumber/html/Plumber.html#method-unmount}{\code{plumber::Plumber$unmount()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{PlumberStatic} router
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlumberStatic$new(direc, options)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{direc}}{a path to an asset directory.}

\item{\code{options}}{options to be evaluated in the \code{PlumberStatic} router environment}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{PlumberStatic} router
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print representation of \code{PlumberStatic()} router.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlumberStatic$print(prefix = "", topLevel = TRUE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{prefix}}{a character string. Prefix to append to representation.}

\item{\code{topLevel}}{a logical value. When method executed on top level
router, set to \code{TRUE}.}

\item{\code{...}}{additional arguments for recursive calls}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A terminal friendly representation of a \code{PlumberStatic()} router.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlumberStatic$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
